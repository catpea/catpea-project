Audio and full text version is available advertisement free at: https://catpea.com or visit https://github.com/catpea/ for source-code
--------------------------------------------------------------------------------

Social Application Development; Or, Self Editable Applications In The Twenty Twenty-Something
Sunday • October 30th 2022 • 8:25:25 pm

There is a way to account for every feature request, and it scares the program managers out of every large company.

Eval is not evil, as project managers would have you believe.

It is a way to create, simple to expand and edit applications.

It’s predecessor is the paste bin, its future, Social Application Development, it is not as sad as it sounds.

Allowing the end-user to edit the application, is only part of the story.

On the other side, it means that users can automate tedious tasks.

No more hours and hours of clicking, now a spreadsheet or a text-file can be processed with a single click.

Self Editable Applications, are related to how Wikipedia works.

They are connected to the ancient SmallTalk, HyperCard, and even View Source in your browser.

And it is also by far, the best way to learn programming.

Because, editable applications, do not hide their source code.

It is a bad idea to give an example, without a working implementation.

But allow me to just describe the old login box, with just username, password, and a login button.

Normally a developer instantiates three user interface controls, they may sometimes even drag it from a collection of reusable UI components.

But in self editable programs, we have to dynamically construct the Username, Password and login button.

We need a list of what makes up a Login Box, a tiny function to loop around it, and dynamically instantiate the controls.

By first asking what type of a GUI control you are requesting, and then fetching that for you.

This is easy, and almost natural in JavaScript, especially with Svelte, but many other languages, frown upon doing that.

They are crafted to demand to know ahead of time, what objects you will require and where.

Object oriented Programming, is a pretty good idea, but it has been crushed to provide a somewhat false sense of security.

JavaScript is also unique when it comes to code editors, you can add one anywhere in your web application.

This isn’t always that easy with other languages, and a lot of them, do not have a code editor written in the same language.

Code editors highlight code, and they may provide some, sometimes useful features – without a question they are a big deal.

When editing a list of controls, be it in code, or something more portable like JSON.

It is very useful to have a content aware text editor, that will highlight programming language features for you.

Finally, imagine a tiny little edit button, marked by a tiny pencil icon, in the corner of evey user interface feature.

Property panes, input forms, drop-down menus and menu bars.

Where you can click it, and first observer how it is done…

And as you get used it, start editing, customizing, and even sharing your customized features.

It is downright SAD, that Social Application Development don’t quite really yet exist outside of this poem.

Perhaps you will be the first, to correctly implement the idea.