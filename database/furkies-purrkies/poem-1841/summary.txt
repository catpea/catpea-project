Audio and full text version is available advertisement free at: https://catpea.com or visit https://github.com/catpea/ for source-code
--------------------------------------------------------------------------------

Computer Network Programming For Girls
Sunday • March 16th 2025 • 8:13:11 pm

First of all what you are about to hear is heresy,
and the words “network programming” have never been used this way.

And I am going to be very direct with you,
I just need you to know, the A, B, and C, so that you rise above it.

But, please know that the point of all this,
is to [understand why everything is broken][1], and what the solution is.

---

A, the moment you finish programming your web application,
you will realize that you have nothing to run it on.

I recommend you write your applications in such a way,
that they can run in an electron shell, and as a Web Extension.

You will need to use an adapter pattern,
where you effortless switch between almost unrelated technologies.

While others will be looking for clients,
you will have your patiently waiting for you to add more platform types.

And the first and foremost that poses a challenge,
is the web, because, the world is going through a trend.

Where company leaders discard the CPU power of all their users,
and freaking host everyone on a central server.

This is incredibly stupid, it is ridiculously expensive,
and without adapters will [turn your code to the very thing that sinks you][2].

Serverless, is a technique, that only provisions computers,
when your normally small network is stressed, but it still sucks.

The network administrators will disagree with me,
and then go back to deal with the fallout of another massive [data breach][3].

And use these disgusting bloated user interfaces,
that cannot help but to lead to mis-configurationism and misunderstanding.

Same administrators and programmers, then go as far,
as consolidating all their services under some management app.

Only to add, yet another layer of complexity,
they just fear, learning, the things that aren’t easy.

Lowest possible effort, leads them through a mistake after a mistake,
low effort service after low effort service, and they learn nothing of value.

---

B, a small step, in the correct direction,
a hint of the storm to come.

ZeroMQ (also spelled ØMQ, 0MQ or ZMQ) is a program,
that can send data, serialized objects, through a mix of transports.

Inter-process Communication, so between two applicaions,
on the same computer, over the local and remote networks via TCP and UDP.

And WebSockets, wh...

----- snip ----- (Sorry, 5,000 letter limit in summaries see catpea.com or visit https://github.com/catpea/ for source-code) ----- snip -----

...t stress, by THE USER INTERFACE,
I mean the Visual Programming User Interface…

With which you build both,
your applications, and your network infrastructure.

All your routing, will be out in open,
from user clicking submit…

To safety mechanisms, firewalls, data routers,
all on one canvas.

Without a a sysop, or admin, or so called engineer,
ruining your programming…

With an effort so low,
they only learn how to use other peoples programs.

---

You, you call them out,
you call them out, the way [Amy Palamountain called out Model View Controller][6].

Become a network heretic, set your future free from Network Administrators,
and their low effort half memoried junk that they memorized for certification.

Where they should have been programming everything from scratch,
leave them to their own pointless unique hell of services and service orchestration.

And build a visual programming language,
that will bring Functional Reactive Programming and Network Programming.

To the same level of abstraction, where you gain actual superpowers,
of both building easy to understand self healing networks.

And having the ability to merely move a cable between two blocks,
to dump some overpriced or useless, or broken, service.

---

Learn programming,
[by building your own visual programming language][7].

And then invent something that can only be called,
network programming, where you are in control of all the nodes and blocks.

Where you can scale to your needs,
by just plugging more computers, and it does not matter where they are.

Because with a VPL, you are always in complete control
of both your application internals and digital domains.

Become the wrong that makes mediocre Network Administrators,
scream.

[Rise Heretic][8], you will never arrive too late, nor too early,
your cyber adventure... awaits.

[1]: https://hn.algolia.com/?q=everything-is-broken
[2]: https://duckduckgo.com/?t=ffab&q=code+is+liability&ia=web
[3]: https://en.wikipedia.org/wiki/List_of_data_breaches
[4]: https://zeromq.org/languages/nodejs/
[5]: https://zguide.zeromq.org/docs/chapter3/
[6]: https://www.youtube.com/watch?v=0o2whtCJw8I
[7]: https://github.com/ivanreese/visual-programming-codex/blob/main/implementations.md
[8]: https://www.youtube.com/watch?v=W76o_iG7Y7g
