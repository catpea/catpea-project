Audio and full text version is available advertisement free at: https://catpea.com or visit https://github.com/catpea/ for source-code
--------------------------------------------------------------------------------

JavaScript Wild!
Saturday • December 28th 2024 • 11:07:54 pm

I have been looking at a new way to learn JavaScript,
by asking AI about really complicated things rewritten in simple JavaScript.

Sometimes, the AI, gets snarky with me,
and goes “Here’s your ‘’’database’’’…”.

But, I think that comes from database professors,
who lay smelly database eggs and spout poetic abut data sharding.

(It is a way of distributing one database to multiple computers,
so that if one goes down nothing will be lost.)

But the AI always returns something shocking and beautiful,
it always, without a fail returns a simple and lightweight version.

I ask about HTTP servers, In-memory databases, table based databases,
similar to spreadsheets, but more row oriented.

And I cannot believe how beautifully simple all of that is,
I was looking at a diff patch algorithm, for synchronizing data trees.

For synchronizing a tree of objects and a web page,
and anybody can follow the code.

The difference finding algorithm, makes a list of differences,
which are easy to read, and patching is hardly even recursive looking.

The code is so clean, that it teaches, in its clarity,
about working with HTML and the Browser’s Document Object Model.

---

I am not exaggerating when I say all programming books need to be re-written,
certainly the beginner books, and especially JavaScript cookbooks.

A cookbook just lists code recipes, such as how to update a web page,
when you get some new data, even from a user submitted form.

Now instead of plain examples that create code samples,
the AI can generate revolutionary code.

It is not harder to read, it just takes a while longer,
and instead of recipes like “How to open a file”.

Cookbooks would just contain useful miniature application examples,
that are just somehow more brilliant and audacious.

As we actually have a competent to help us write the books,
and tutorials.

---

It gets even crazier, with intermediate level code,
for the same reason that there is less fear to drown in complexity.

In my style of programming, I build bridges, such as bubbling tress of data,
which are just recursivley nested nodes that emit changes a the root.

About a 150 lines of code, completely shifts what I am programming on top of,
what options I have, and because there is less fear.

I fuse and remix ideas, that scare normal programmers,
as it would hardly occur to them to fuse a Object Tree Tree with Signals.

This is days of programming, that can now be rolled into an hour or two,
just to discover what it can do, how it improves the programming landscape.

Beginner, intermediate and advance programming,
has dropped in complexity by 90%.

When AI’s ability to summarize text is exploited,
to simplify complex code, the results are absolutely stunning.

Learning the language of the web today,
has become an adventure, much like an archaeological survey.

Come up with a technological concept,
and ask the AI to rewrite it in simple modern JavaScript.

Especially, if you have never programmed before,
talk about web servers, databases, wiki-wikis, text games.

On your first day,
you’ll be exposed to things that take programmers years to get to.

There noting intimidating about learning JavaScript programming,
it is all just wide open, not a single topic will confuse you for long.
