Audio and full text version is available advertisement free at: https://catpea.com or visit https://github.com/catpea/ for source-code
--------------------------------------------------------------------------------

Yippee Ki-Yay JavaScript And Code Refactoring Spells
Sunday • February 23rd 2025 • 5:35:24 pm

Refactoring is about internal program upgrades,
heroic little battles that change nothing at first.

And then change everything,
opening the future wide.

---

I just spent a week refactoring a data tree,
into a data table.

A tree has many nested branches,
like folders on your disk.

And a table, a kind of a tree,
is best viewed as just a grid.

Column Name, Row Id,
and you sank my battleship.

---

The tree could have acted as a table,
but I used it as a test of AI.

And I told the leading programming AI,
to convert all values into signals.

Values that report automatically,
when they change.

It appeared to have been working,
but all my clockwork has to be visible in my mind.

Once I gave it to the AI,
I could no longer visualize the inner-workings of my program.

So, despite whatever you are told,
that is how programming AI fits into our world.

Either engineer your program right,
or pray it does not bite.

---

As you might have guessed,
a programmer casts spells.

And they all have detailed radiant shapes,
just like you see in the movies.

But the best spells, are things like grids,
that are easy to visualize, cast, and pile stuff on top of.

When you use an AI to cast for you,
you end up with weird shapes.

They are not wrong, mostly ever right,
but they aren’t perfectly simple – they are jumbled.

---

I love refactoring,
this is how I learned programming.

I would make something and then re-make it,
with many different technologies.

I am ancient, I have been to many places,
an I have learned to cast a lot of spells.

I highly recommend refactoring as a learning method,
it is the fun version of debugging.

---

This refactoring effort, is for my Visual Programming Language,
and grants me the power to save and load project files.

The full little reward that it adds up to,
is a game-like user interface for project management.

I want early releases of my program to open like a game,
NEW, TUTORIAL, LOAD, SAVE, QUIT.

I hope to publish some programming tutorials,
on leading game platforms.

But at first I am moving towards a Desktop Application,
and a Web Browser Extension.

The idea here is driven by the fact that web browser sidebars,
can be of any width.

Meaning I can squeeze a web page to mobile-like width,
and use the remaining 75%-80% of new screen real estate.

For my visual programming language,
which will be tapping into the web page to customize it.

The desktop application has the ultimate power,
as you can imagine.

And no it is not required for running programs,
made with my VPL.

Nodejs, allows creation of stand-alone executable files,
and that could not be more interesting.

---

I am just having,
way too much fun.

---

Please, learn programming,
just search for JavaScript tutorials on your favorite video site.

And don’t look back,
come wrangle infinite loops and state machines.

Become a wizard, a star admiral,
and a Yippee Ki-Yay maverick and a code slinger.
