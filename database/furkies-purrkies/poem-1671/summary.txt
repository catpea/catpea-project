Audio and full text version is available advertisement free at: https://catpea.com or visit https://github.com/catpea/ for source-code
--------------------------------------------------------------------------------

Sooner Or Later You Will Have To Spend A Bit Of Time With Artificial Intelligence
Friday • September 27th 2024 • 9:08:49 pm

I have my own AI, running just fine,
on an old computer.

It is a newly optimized AI program,
released days ago called llama 3.2.

And 3.2 is a huge speed boost,
over older versions.

This is new,
never go beneath llama 3.2, those models are too slow.

---

The moment I started writing this text,
I went to https://ollama.com/

And ran their curl command:
“curl -fsSL https://ollama.com/install.sh | sh” on a Raspberry PI 4.

Rasperry PI 4 takes entire minutes to load youtube,
I use it when I need to track bottlenecks in my code.

Rasperry PI 4, is powerful, but too slow for the internet,
it is much slower than your cell phone.

Wehn I ran the curl command I saw “Installing ollama”,
nearly instantly ten minutes later after a couple of gigabytes it was running.

Then I installed llama 3.2 by running “ollama run llama3.2”
it said “pulling manifest” and few minites later it printed “Send A Message”.

That is when you are supposed to type,
and I typed in “When did humans lost their tail?”

20 seconds later it started printing a response,
at the speed of a person typeing on their phone.

Too slow to read as you go,
but fine if you are just following with your eyes.

---

The answer was strong, it correctly stated Humans never had a tail,
or it might have been a tiny little thing.

And when I asked about Hominids,
it started typing such a thurough response, that I feel spoiled.

Having mostly used a free AI,
to see what its limits are.

---

On a Rasperry PI, your want to let it write,
on a normal computer, it just gives you text.

---

So ollama is a primitive program that installs llama 3.2,
you can get it for windows and mac, and it is just a text window.

It runs in the terminal,
which is great, it is meant for text, and AI is text, a perfect pair.

If you get confused installing it,
just look for a video tutorial, and make sure you install llama 3.2 or higher.

---

Finally, I have a pet question I like to ask,
roughly “Give me three examples of a program using the Actor Model”.

And my variant worked better than the leading free AI,
llama took the time to create scenarios, explaining how the programs work.

One of the examples it gave me was an online store,
and it described the actors, User, Shopping Cart, and Payme...

----- snip ----- (Sorry, 5,000 letter limit in summaries see catpea.com or visit https://github.com/catpea/ for source-code) ----- snip -----

...r 2: Variables and Data Types**

* Basic data types in JavaScript (strings, numbers, booleans, arrays,
objects)
* Declaring variables with var, let, and const
* Assigning values to variables
* Basic operators (+, -, \*, /, %)

**Chapter 3: Control Structures**

* Conditional statements (if/else, switch)
* Loops (for, while, do-while)
* Break and continue statements

**Chapter 4: Functions**

* Defining and calling functions
* Function arguments and return values
* Closures and the use of function context

**Chapter 5: Objects and Arrays**

* Creating objects with constructors or literal syntax
* Accessing and modifying object properties
* Working with arrays (indexing, slicing, concatenation)
* Basic array operations (forEach, filter, map)

**Chapter 6: DOM Manipulation**

* Introduction to the Document Object Model (DOM)
* Selecting elements using CSS selectors
* Modifying element content and attributes
* Basic event handling (onclick, onmouseover)

**Chapter 7: Event-Driven Programming**

* Understanding event listeners and event handlers
* Creating custom event handlers
* Handling events with event delegation

**Chapter 8: Working with Data Structures**

* Introducing the Fetch API for making HTTP requests
* Manipulating JSON data with JSON.parse() and JSON.stringify()
* Using the Map object for key-value pairs
* Understanding Set objects for unique values

**Chapter 9: Advanced Topics**

* Introduction to promises and async/await
* Working with callbacks and error handling
* Introducing Redux or other state management libraries (optional)

**Chapter 10: Putting it All Together**

* Building a simple web application using JavaScript
* Integrating HTML, CSS, and server-side languages (e.g., Node.js)
* Troubleshooting common issues in your code

This outline covers the basics of JavaScript programming and provides a
solid foundation for further learning. Each chapter includes bite-sized
examples to help illustrate key concepts.

Next steps would be to write detailed lesson plans for each chapter,
including:

* Step-by-step guides with example code
* Tips and best practices
* Exercises or quizzes to reinforce understanding

Let me know if you'd like me to expand on any of these chapters or
provide sample content!
